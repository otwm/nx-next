{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "camelcase": "error",
        "semi": ["error", "never"],
        "quotes": ["error", "single"],
        "max-len": [2, {
          "code": 120,
          "tabWidth": 2,
          "ignoreUrls": true,
          "comments": 100,
          "ignoreRegExpLiterals": true
        }],
        // "import/extensions": "off",
        // "import/no-unresolved": "off",
        "import/extensions": ["error", "ignorePackages", {
          "js": "never",
          "jsx": "never",
          "ts": "never",
          "tsx": "never"
        }],
        "no-lonely-if": 0,
        "no-underscore-dangle": 0,
        "no-use-before-define": 0,
        "no-unused-vars": "off",
        "react/jsx-props-no-spreading": 0,
        "import/prefer-default-export": 0,
        "@typescript-eslint/no-unused-vars": ["off",
          // or "error"
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }],
        "prefer-destructuring": 0,
        "react/jsx-no-useless-fragment": 0,
        "react/no-unstable-nested-components": 0,
        "arrow-body-style": 0,
        "import/no-named-as-default": 0,
        "import/no-extraneous-dependencies": ["error", {
          "devDependencies": ["test.{ts,tsx}",
            "test-*.{ts,tsx}",
            // repos with a single test file
            "test-*.{ts,tsx}",
            // repos with multiple top-level test files
            "**/*{.,_}{test,spec,stories}.{ts,tsx}",
            // tests where the extension or filename suffix denotes that it is a test
            "**/jest.config.ts",
            // jest config
            "**/jest.setup.ts" // jest setup
          ],
          "optionalDependencies": false
        }],
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "enforceBuildableLibDependency": true,
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "*",
                "onlyDependOnLibsWithTags": ["*"]
              },
              {
                "sourceTag": "scope:types",
                "onlyDependOnLibsWithTags": ["scope:types"]
              },
              {
                "sourceTag": "scope:base",
                "onlyDependOnLibsWithTags": ["scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:common-ui",
                "onlyDependOnLibsWithTags": ["scope:common-ui", "scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:app1-ui",
                "onlyDependOnLibsWithTags": ["scope:app1-ui", "scope:common-ui", "scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:app2-ui",
                "onlyDependOnLibsWithTags": ["scope:app2-ui", "scope:common-ui", "scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:app1",
                "onlyDependOnLibsWithTags": ["scope:app1", "scope:app1-ui", "scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:app2",
                "onlyDependOnLibsWithTags": ["scope:app2", "scope:app2-ui", "scope:base", "scope:types"]
              },
              {
                "sourceTag": "scope:app1-e2e",
                "onlyDependOnLibsWithTags": ["scope:app1-e2e", "scope:app1"]
              },
              {
                "sourceTag": "scope:app2-e2e",
                "onlyDependOnLibsWithTags": ["scope:app2-e2e", "scope:app2"]
              },
              {
                "sourceTag": "scope:total-ui",
                "onlyDependOnLibsWithTags": ["scope:total-ui", "scope:app2-ui", "scope:app1-ui", "scope:common-ui"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {}
    },
    {
      "files": ["*.tsx"],
      "extends": ["plugin:@nrwl/nx/typescript"],
      "rules": {
        "react/function-component-definition": [1, {
          "namedComponents": "arrow-function",
          "unnamedComponents": "arrow-function"
        }],
        "react/jsx-filename-extension": [2, {
          "extensions": [".jsx", ".tsx"]
        }],
        "react/require-default-props": 0
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {
      }
    },
    {
      "files": ["*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {
      }
    }
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "project": "packages/*/tsconfig.json"
      } // this loads <rootdir>/tsconfig.json to eslint
    }
  }
}
